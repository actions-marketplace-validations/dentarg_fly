name: "Fly GitHub Deploy"
description: "Deploy to Fly from GitHub Actions"
branding:
  icon: "umbrella"
  color: "blue"
inputs:
  fly-token:
    description: "Fly API token"
    required: true
  github-token:
    description: "The repo scoped token generated by GitHub Actions"
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: superfly/flyctl-actions/setup-flyctl@master

    - name: Lookup app hostname
    - run: |
        echo "FLY_HOSTNAME=$(flyctl info --host)" >> $GITHUB_ENV
      env:
        FLY_API_TOKEN: "${{ inputs.fly-token }}"

    - name: Create deployment in GitHub
      if: ${{ inputs.github-token }}
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      shell: bash
      run: |
        deploymentId=$(gh api repos/${{ github.repository }}/deployments \
          --method POST \
          --header "Accept: application/vnd.github.v3+json" \
          --field ref='${{ github.event.repository.default_branch }}' \
          --field environment=$FLY_HOSTNAME \
          --field description='Fly deploy from GitHub Actions' \
          --jq '.id')
        echo "DEPLOYMENT_ID=$deploymentId" >> $GITHUB_ENV

    - name: Deploy to Fly
    - run: flyctl deploy --remote-only
      env:
        FLY_API_TOKEN: "${{ inputs.fly-token }}"

    - name: Create deployment status in GitHub
      if: ${{ inputs.github-token }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      run: |
        gh api repos/${{ github.repository }}/deployments/$DEPLOYMENT_ID/statuses \
          --method POST \
          --header "Accept: application/vnd.github.v3+json" \
          --field state=success \
          --field log_url=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \
          --field environment_url=https://$FLY_HOSTNAME
